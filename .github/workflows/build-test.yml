name: Build & Test

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'hello-grpc-flutter/**'
      - 'hello-grpc-tauri/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'hello-grpc-flutter/**'
      - 'hello-grpc-tauri/**'
  workflow_dispatch:

permissions:
  contents: read
  checks: write

jobs:
  flutter-build-test:
    name: Flutter Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'
          channel: 'stable'
          cache: true

      - name: Get Flutter dependencies
        working-directory: hello-grpc-flutter
        run: flutter pub get

      - name: Verify Flutter installation
        run: flutter doctor -v

      - name: Analyze Flutter code
        working-directory: hello-grpc-flutter
        run: flutter analyze

      - name: Run Flutter tests
        working-directory: hello-grpc-flutter
        run: flutter test --coverage

      - name: Build Flutter app (Linux)
        if: matrix.os == 'ubuntu-latest'
        working-directory: hello-grpc-flutter
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev
          flutter config --enable-linux-desktop
          flutter build linux --release

      - name: Build Flutter app (Windows)
        if: matrix.os == 'windows-latest'
        working-directory: hello-grpc-flutter
        run: |
          flutter config --enable-windows-desktop
          flutter build windows --release

      - name: Build Flutter app (macOS)
        if: matrix.os == 'macos-latest'
        working-directory: hello-grpc-flutter
        run: |
          flutter config --enable-macos-desktop
          flutter build macos --release

      - name: Upload Flutter build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: flutter-build-${{ matrix.os }}
          path: |
            hello-grpc-flutter/build/linux/x64/release/bundle/
            hello-grpc-flutter/build/windows/runner/Release/
            hello-grpc-flutter/build/macos/Build/Products/Release/
          if-no-files-found: ignore

  tauri-build-test:
    name: Tauri Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: hello-grpc-tauri/package-lock.json

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            hello-grpc-tauri/src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('hello-grpc-tauri/src-tauri/Cargo.lock') }}

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        working-directory: hello-grpc-tauri
        run: npm ci

      - name: Check Rust code formatting
        working-directory: hello-grpc-tauri/src-tauri
        run: cargo fmt --all -- --check

      - name: Run Rust linting
        working-directory: hello-grpc-tauri/src-tauri
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run Rust tests
        working-directory: hello-grpc-tauri/src-tauri
        run: cargo test

      - name: Build Tauri app (Debug)
        working-directory: hello-grpc-tauri
        run: npm run tauri build -- --debug
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      - name: Upload Tauri build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: tauri-build-${{ matrix.os }}
          path: |
            hello-grpc-tauri/src-tauri/target/debug/bundle/
            hello-grpc-tauri/src-tauri/target/release/bundle/
          if-no-files-found: ignore

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [flutter-build-test, tauri-build-test]
    if: always() && (needs.flutter-build-test.result == 'success' || needs.tauri-build-test.result == 'success')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup test environment
        run: |
          echo "Setting up integration test environment..."
          # Add any integration test setup here

      - name: Run integration tests
        run: |
          echo "Running integration tests..."
          # Add integration test commands here
          echo "âœ… Integration tests would run here"

      - name: Generate test report
        run: |
          echo "# Test Results Summary" > test-report.md
          echo "" >> test-report.md
          echo "## Flutter Tests" >> test-report.md
          echo "- Status: ${{ needs.flutter-build-test.result }}" >> test-report.md
          echo "" >> test-report.md
          echo "## Tauri Tests" >> test-report.md
          echo "- Status: ${{ needs.tauri-build-test.result }}" >> test-report.md
          echo "" >> test-report.md
          echo "Generated on: $(date)" >> test-report.md

      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test-report.md